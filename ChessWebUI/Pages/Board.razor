@page "/Board"
@using System.Net
@using ChessWebUI.Components.ChessPieces
@inherits LayoutComponentBase

<h1>Chess Board</h1>
<div class="chessboard" style="width: 640px; height: 640px; border: solid lightslategrey 0.8rem; display: flex; flex-flow: row wrap;">
    @for (var row = 0; row < 8; row++)
    {
        for (var col = 0; col < 8; col++)
        {
            if (col % 2 == 0)
            {
                <div class="square" id="@(row)-@(col)" style="width: 12.5%; height: 12.5%; flex-basis: 12.5%; background-color: @(row % 2 == 0 ? "#C07F00" : "#4C3D3D")">
                    <Piece PieceType="@(ChessBoard.GetPieceSymbolAtSquare(row * 8 + col))"/>
                </div>
            }
            else
            {
                <div class="square" id="@(row)-@(col)" style="width: 12.5%; height: 12.5%; flex-basis: 12.5%; background-color: @(row % 2 == 0 ? "#4C3D3D" : "#C07F00")">
                    <Piece PieceType="@(ChessBoard.GetPieceSymbolAtSquare(row * 8 + col))"/>
                </div>
            }
        }
    }
</div>
<div style=" display: flex; justify-content: space-evenly; border-top: 5px; width: 640px;">
    <input style="width: 80%; margin-top: 5px; height: 2rem;" @bind:event="oninput" @bind:get="inputFen" @bind:set="OnInput"/>
    <button style="width: 15%; height: 2rem; margin-top: 5px; background: #842029; border: 1px solid #b32121; border-radius: 10%; color: #ffffff;" @onclick="UpdateFen">Submit</button>
    <button @onclick="Move">Move Test</button>
</div>

<table>
    <thead>
    <tr>
        <th>Available FENs:</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var fen in ChessBoard.FenList)
    {
        <tr>
            <td style="cursor: pointer; border: 1px solid #1a1e21;" @onclick="() => ChessBoard.GenerateBoardWithFen(fen)">@fen</td>
        </tr>
    }
    </tbody>
</table>


@code {
    public ChessEngine.Board ChessBoard = new();

    public string? inputFen { get; set; }

    private void OnInput(string? value)
    {
        inputFen = value;
    }

    private void Move()
    {
        ChessBoard.Move(55, 24, ChessBoard.Bitboard[0]);
    }

    private void UpdateFen()
    {
        if (inputFen != null) ChessBoard.GenerateBoardWithFen(inputFen);
    }

}