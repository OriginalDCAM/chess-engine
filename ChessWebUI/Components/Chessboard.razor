@using ChessWebUI.Components.ChessPieces
<MudItem>
    <div class="chessboard">
        @for (var row = 0; row < 8; row++)
        {
            for (var col = 0; col < 8; col++)
            {
                int currentSquare = row * 8 + col;
                <div class="square"
                     @onclick="@(() => OnSquareClick(currentSquare))"
                     style="background-color: @((row + col) % 2 == 0 ? "#CD3F3E" : "#1C2938");">
                    <div class="square-attack-overlay" style="display: @(_visualizeAttackList.Contains(currentSquare) ? "block" : "none")">
                    </div>
                    @if (Board.GetPieceSymbolAtSquare(currentSquare) != '.')
                    {
                        <Piece PieceType="@(Board.GetPieceSymbolAtSquare(currentSquare))"/>
                    }
                </div>
            }
        }
    </div>
</MudItem>